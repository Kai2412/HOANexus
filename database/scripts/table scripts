-- Create the Communities table (central entity)
CREATE TABLE cor_Communities (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    Pcode VARCHAR(50),
    Name NVARCHAR(255) NOT NULL,
    DisplayName NVARCHAR(255),
    CommunityType VARCHAR(50) NOT NULL,
    Status VARCHAR(50) NOT NULL DEFAULT 'Active',
    FormationDate DATE,
    FiscalYearStart DATE,
    FiscalYearEnd DATE,
    ContractStartDate DATE,
    ContractEndDate DATE,
    TaxID VARCHAR(50),
    TimeZone VARCHAR(50) DEFAULT 'UTC',
    ParentCommunityID INT,
    IsSubAssociation BIT DEFAULT 0,
    LastAuditDate DATE,
    NextAuditDate DATE,
    DataCompleteness FLOAT DEFAULT 0,
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (ParentCommunityID) REFERENCES cor_Communities(ID)
);

-- Create the Properties table
CREATE TABLE cor_Properties (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    CommunityID INT NOT NULL,
    AddressLine1 NVARCHAR(255) NOT NULL,
    AddressLine2 NVARCHAR(255),
    City NVARCHAR(100) NOT NULL,
    State NVARCHAR(50) NOT NULL,
    PostalCode VARCHAR(20) NOT NULL,
    Country VARCHAR(50) DEFAULT 'USA',
    Latitude DECIMAL(9,6),
    Longitude DECIMAL(9,6),
    PropertyType VARCHAR(50) NOT NULL,
    SquareFootage INT,
    Bedrooms INT,
    Bathrooms FLOAT,
    YearBuilt INT,
    LotSize FLOAT,
    ParcelID NVARCHAR(100),
    AssessmentPercentage FLOAT DEFAULT 1.0,
    IsActiveDevelopment BIT DEFAULT 0,
    VotingInterest FLOAT DEFAULT 1.0,
    Status VARCHAR(50) DEFAULT 'Occupied',
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (CommunityID) REFERENCES cor_Communities(ID)
);

-- Create the Stakeholders table
CREATE TABLE cor_Stakeholders (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    Type VARCHAR(50) NOT NULL,
    FirstName NVARCHAR(100),
    LastName NVARCHAR(100),
    CompanyName NVARCHAR(255),
    Email NVARCHAR(255),
    Phone VARCHAR(30),
    MobilePhone VARCHAR(30),
    PreferredContactMethod VARCHAR(20) DEFAULT 'Email',
    Status VARCHAR(20) DEFAULT 'Active',
    PortalAccessEnabled BIT DEFAULT 0,
    LastLoginDate DATETIME,
    CreatedDate DATETIME DEFAULT GETDATE(),
    DataPrivacyPreferences NVARCHAR(MAX),
    IsActive BIT DEFAULT 1
);

-- Create the PropertyStakeholders junction table
CREATE TABLE cor_PropertyStakeholders (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    PropertyID INT NOT NULL,
    StakeholderID INT NOT NULL,
    RelationshipType VARCHAR(50) NOT NULL,
    Ownership BIT DEFAULT 0,
    OwnershipPercentage FLOAT DEFAULT 100.0,
    ResidencyStatus VARCHAR(50),
    StartDate DATE NOT NULL,
    EndDate DATE,
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (PropertyID) REFERENCES cor_Properties(ID),
    FOREIGN KEY (StakeholderID) REFERENCES cor_Stakeholders(ID)
);

-- Create the UserAccounts table
CREATE TABLE sec_UserAccounts (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    StakeholderID INT NOT NULL,
    Username NVARCHAR(100) NOT NULL,
    PasswordHash NVARCHAR(255),
    LastLoginDate DATETIME,
    FailedLoginAttempts INT DEFAULT 0,
    AccountLocked BIT DEFAULT 0,
    LockReason NVARCHAR(255),
    PasswordLastChanged DATETIME,
    PasswordExpiryDate DATETIME,
    MFAEnabled BIT DEFAULT 0,
    PreferredMFAMethod VARCHAR(50),
    AccountStatus VARCHAR(20) DEFAULT 'Pending',
    SessionTimeout INT DEFAULT 30,
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (StakeholderID) REFERENCES cor_Stakeholders(ID),
    CONSTRAINT UQ_UserAccounts_Username UNIQUE (Username)
);

-- Create the Permissions table
CREATE TABLE sec_Permissions (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    RoleName VARCHAR(100) NOT NULL,
    Description NVARCHAR(255),
    IsSystemRole BIT DEFAULT 0,
    CommunityID INT,
    CreatedBy INT,
    CreationDate DATETIME DEFAULT GETDATE(),
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (CommunityID) REFERENCES cor_Communities(ID),
    FOREIGN KEY (CreatedBy) REFERENCES cor_Stakeholders(ID),
    CONSTRAINT UQ_Permissions_RoleName_Community UNIQUE (RoleName, CommunityID)
);

-- Create the UserRoles table
CREATE TABLE sec_UserRoles (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    UserAccountID INT NOT NULL,
    PermissionID INT NOT NULL,
    AssignedBy INT,
    AssignmentDate DATETIME DEFAULT GETDATE(),
    ExpirationDate DATETIME,
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (UserAccountID) REFERENCES sec_UserAccounts(ID),
    FOREIGN KEY (PermissionID) REFERENCES sec_Permissions(ID),
    FOREIGN KEY (AssignedBy) REFERENCES cor_Stakeholders(ID)
);

-- Create the PermissionDetails table for fine-grained control
CREATE TABLE sec_PermissionDetails (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    PermissionID INT NOT NULL,
    ResourceType VARCHAR(50) NOT NULL,
    Action VARCHAR(20) NOT NULL,
    Constraints NVARCHAR(MAX),
    IsActive BIT DEFAULT 1,
    FOREIGN KEY (PermissionID) REFERENCES sec_Permissions(ID)
);